<?xml version="1.0" encoding="UTF-8"?>
<!--

    ***************************************************************************
    Copyright (c) 2010 Qcadoo Limited
    Project: Qcadoo MES
    Version: 1.4

    This file is part of Qcadoo.

    Qcadoo is free software; you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published
    by the Free Software Foundation; either version 3 of the License,
    or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
    ***************************************************************************

-->
<view defaultAuthorizationRole="ROLE_MATERIAL_FLOW" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schema.qcadoo.org/view"
	xsi:schemaLocation="http://schema.qcadoo.org/view http://schema.qcadoo.org/view.xsd"
	name="materialsInLocationsList" 
	modelName="materialsInLocation" 
	menuAccessible="true">
	
		<component type="window" name="window" reference = "window">
			<ribbon>
				<template name="standardGridTemplate" />
				<group name="export">
					<smallButton name="pdf" icon="pdfIcon16.png"
						action="#{grid}.fireEvent(printMaterialsInLocationDocuments,pdf);" state="disabled"
						message="qcadooView.message.noRecordSelected" />
					<smallButton name="xls" icon="xlsIcon16.png"
						action="#{grid}.fireEvent(printMaterialsInLocationDocuments,xls);" state="disabled"
						message="qcadooView.message.noRecordSelected" />
				</group>
			</ribbon>
			
			<component type="grid" name="materialsInLocation" reference="grid">
				<script>
					<![CDATA[
						var xlsRibbonItem = #{window}.getRibbonItem("export.xls");
						var pdfRibbonItem = #{window}.getRibbonItem("export.pdf");
						
						var listener = {
							onChange: function(selectedEntitiesArray) {
								if (!selectedEntitiesArray || selectedEntitiesArray.length == 0) {
									xlsRibbonItem.disable();
									pdfRibbonItem.disable();
								} else if (selectedEntitiesArray.length > 1) {
									xlsRibbonItem.disable("#{translate(moreThanOneRecordSelected)}");
									pdfRibbonItem.disable("#{translate(moreThanOneRecordSelected)}");	
								} else if (selectedEntitiesArray[0].fields.generated == '0') {
									xlsRibbonItem.disable("#{translate(orders.ribbon.message.recordNotGenerated)}");
									pdfRibbonItem.disable("#{translate(orders.ribbon.message.recordNotGenerated)}");								
								} else {
									xlsRibbonItem.enable();
									pdfRibbonItem.enable();
								}
							}
						}
						this.addOnChangeListener(listener);
					]]>
				</script>
				<option type="column" name="name" fields="name" link="true"
					width="300" />
				<option type="column" name="materialFlowForDate" fields="materialFlowForDate" link="true"
					width="100" />
				<option type="column" name="time" fields="time" link="true"
					width="100" />
				<option type="column" name="worker" fields="worker" width="200" />
			
				<option type="order" column="name" direction="asc" />
			
				<option type="searchable" value="name,materialFlowForDate,time,worker" />
				<option type="orderable" value="name,materialFlowForDate,time,worker" />
			
				<option type="correspondingView" value="materialFlow/materialsInLocationDetails" />
				<option type="correspondingComponent" value="form" />
			
				<option type="fullscreen" value="true" />
				<option type="multiselect" value="true" />
				
 				<listener event="printMaterialsInLocationDocuments" 
 					class="com.qcadoo.mes.materialFlow.MaterialsInLocationService" 
 					method="printMaterialsInLocationDocuments" /> 
		</component>
		
		<option type="fixedHeight" value="true" />
		<option type="header" value="false" />
	</component>
	
	<hooks>
 		<beforeRender class="com.qcadoo.mes.materialFlow.MaterialsInLocationService" 
 			method="setGridGenerateButtonState" /> 
	</hooks>
</view>
