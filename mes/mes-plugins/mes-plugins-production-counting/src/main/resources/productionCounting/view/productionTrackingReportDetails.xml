<?xml version="1.0" encoding="UTF-8"?>
<!--

    ***************************************************************************
    Copyright (c) 2010 Qcadoo Limited
    Project: Qcadoo MES
    Version: 1.4

    This file is part of Qcadoo.

    Qcadoo is free software; you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published
    by the Free Software Foundation; either version 3 of the License,
    or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
    ***************************************************************************

-->
<view defaultAuthorizationRole="ROLE_PRODUCTION_COUNTING" name="productionTrackingReportDetails"
	  modelName="productionTrackingReport"
	  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schema.qcadoo.org/view"
	  xsi:schemaLocation="http://schema.qcadoo.org/view http://schema.qcadoo.org/view.xsd">

	<component type="window" name="window" reference="window">

		<ribbon>
			<template name="standardFormTemplate"/>
			<group name="generate">
				<bigButton name="generate" icon="generateIcon24.png"
						   action="#{form}.fireEvent(generateProductionTrackingReport);" state="disabled"/>
			</group>
			<group name="export">
				<bigButton name="pdf" icon="pdfIcon24.png"
						   action="#{form}.fireEvent(printProductionTrackingReport,pdf);" state="disabled"/>
			</group>
		</ribbon>

		<component type="form" name="productionTrackingReportDetails"
				   reference="form">

			<script>
				<![CDATA[
					var pdfRibbonItem = #{window}.getRibbonItem("export.pdf");
					var save = #{window}.getRibbonItem("actions.save");
					var saveBack = #{window}.getRibbonItem("actions.saveBack");
					var saveNew = #{window}.getRibbonItem("actions.saveNew");
					var entityExists = false;
					var generatedRibbonItem =  #{window}.getRibbonItem("generate.generate");
					
					this.addOnChangeListener({
						onSetValue: function(value) {
							if (!value || !value.content) {
								return;
							}
							if (value.content.entityId) {
								entityExists = true;
							} else {
								entityExists = false;
							}
							updateRibbon();
						}
					});
					
					function updateRibbon() {
						if (entityExists) {
							var isGeneratedCheckboxValue = #{generated}.getValue();
							if (isGeneratedCheckboxValue && isGeneratedCheckboxValue.content.value == "1") {
								pdfRibbonItem.enable();
								save.disable("#{translate(productionCounting.productionTrackingReport.report.error.documentsWasGenerated)}");
								saveBack.disable("#{translate(productionCounting.productionTrackingReport.report.error.documentsWasGenerated)}");
								saveNew.disable("#{translate(productionCounting.productionTrackingReport.report.error.documentsWasGenerated)}");
								generatedRibbonItem.disable("#{translate(productionCounting.productionTrackingReport.report.error.documentsWasGenerated)}");
							} else {
								pdfRibbonItem.disable("#{translate(orders.ribbon.message.recordNotGenerated)}");
								save.enable();
								saveBack.enable();
								saveNew.enable();
								generatedRibbonItem.enable();
							}
						} else {
							copyRibbonItem.disable("#{translate(recordNotCreated)}");
							pdfRibbonItem.disable("#{translate(recordNotCreated)}");
							save.enable();
							saveBack.enable();
							saveNew.enable();
							generatedRibbonItem.disable();
						}
					}
				]]>
			</script>

			<component type="gridLayout" name="gridLayout" columns="3"
					   rows="9">
				<layoutElement column="1" row="1">
					<component type="checkbox" name="generated" reference="generated"
							   field="generated" defaultEnabled="false">
						<option type="textRepresentationOnDisabled" value="false"/>
					</component>
				</layoutElement>
				<layoutElement column="1" row="2">
					<component type="lookup" name="order" field="order"
							   reference="order">
						<option type="column" name="name" fields="name" link="true"/>

						<option type="required" value="true"/>

						<option type="searchable" value="name"/>
						<option type="orderable" value="name"/>

						<option type="expression"
								value="'&lt;b&gt;' + #number + '&lt;/b&gt; - ' + #name"/>
						<option type="fieldCode" value="number"/>

						<listener event="onSelectedEntityChange"
								  class="com.qcadoo.mes.productionCounting.listeners.ProductionTrackingReportDetailsListeners"
								  method="fillProductAndProductionTrackingsWhenOrderChanged"/>
					</component>
				</layoutElement>
				<layoutElement column="1" row="3">
					<component type="lookup" name="product" field="product"
							   reference="product">
						<option type="column" name="name" fields="name" link="true"/>

						<option type="required" value="true"/>

						<option type="searchable" value="name"/>
						<option type="orderable" value="name"/>

						<option type="expression" value="#name"/>
						<option type="fieldCode" value="number"/>
					</component>
				</layoutElement>
				<layoutElement column="1" row="4">
					<component type="textarea" name="name" reference="name"
							   field="name"/>
				</layoutElement>
				<layoutElement column="1" row="5">
					<component type="input" name="date" reference="date"
							   field="date" defaultEnabled="false"/>
				</layoutElement>
				<layoutElement column="1" row="6">
					<component type="input" name="worker" reference="worker"
							   field="worker" defaultEnabled="false">
						<option type="textRepresentationOnDisabled" value="false"/>
					</component>
				</layoutElement>
				<layoutElement column="1" row="7" height="3">
					<component type="textarea" name="description" reference="description"
							   field="description"/>
				</layoutElement>
				<layoutElement column="2" row="1" height="9" width="2">
					<component type="grid" name="productionTrackings"
							   reference="productionTrackings" model="productionTracking">
						<option type="column" name="number" fields="number"/>
						<option type="column" name="operation" fields="technologyOperationComponent"
								expression="(#technologyOperationComponent == null) ? '' : #technologyOperationComponent['nodeNumber'] + ' ' + #technologyOperationComponent['operation']['name']"/>
						<option type="column" name="lastTracking" fields="lastTracking"/>
						<option type="column" name="shift" fields="shift"/>
						<option type="column" name="dateAndTime" fields="stateChanges"
								expression="#stateChanges[0].getField('dateAndTime').toLocaleString()"/>
						<option type="column" name="worker" fields="stateChanges"
								expression="#stateChanges[0].getField('worker')"/>

						<option type="order" column="number" direction="asc"/>
					</component>
				</layoutElement>
			</component>

			<option type="header" value="true"/>
			<option type="expression" value="#name"/>

			<listener event="generateProductionTrackingReport"
					  class="com.qcadoo.mes.productionCounting.listeners.ProductionTrackingReportDetailsListeners"
					  method="generateProductionTrackingReport"/>
			<listener event="printProductionTrackingReport"
					  class="com.qcadoo.mes.productionCounting.listeners.ProductionTrackingReportDetailsListeners"
					  method="printProductionTrackingReport"/>
		</component>

	</component>

	<hooks>
		<beforeRender
				class="com.qcadoo.mes.productionCounting.hooks.ProductionTrackingReportDetailsHooks"
				method="fillProductionTrackingsGrid"/>
		<beforeRender
				class="com.qcadoo.mes.productionCounting.hooks.ProductionTrackingReportDetailsHooks"
				method="disableFieldsWhenGenerated"/>
	</hooks>

</view>