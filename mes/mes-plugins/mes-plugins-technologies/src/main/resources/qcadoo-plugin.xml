<?xml version="1.0" encoding="UTF-8"?>
<!--

    ***************************************************************************
    Copyright (c) 2010 Qcadoo Limited
    Project: Qcadoo MES
    Version: 1.4

    This file is part of Qcadoo.

    Qcadoo is free software; you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published
    by the Free Software Foundation; either version 3 of the License,
    or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
    ***************************************************************************

-->
<plugin plugin="technologies" group="technologies" version="${qcadoo.plugin.version}"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schema.qcadoo.org/plugin"
        xmlns:model="http://schema.qcadoo.org/modules/model" xmlns:view="http://schema.qcadoo.org/modules/view"
        xmlns:menu="http://schema.qcadoo.org/modules/menu" xmlns:custom="http://schema.qcadoo.org/modules/custom"
        xmlns:localization="http://schema.qcadoo.org/modules/localization"
        xsi:schemaLocation="
		http://schema.qcadoo.org/plugin 
		http://schema.qcadoo.org/plugin.xsd 
		http://schema.qcadoo.org/modules/model 
		http://schema.qcadoo.org/modules/model.xsd 
		http://schema.qcadoo.org/modules/view 
		http://schema.qcadoo.org/modules/view.xsd 
		http://schema.qcadoo.org/modules/localization 
		http://schema.qcadoo.org/modules/localization.xsd 
		http://schema.qcadoo.org/modules/menu 
		http://schema.qcadoo.org/modules/menu.xsd 
		http://schema.qcadoo.org/modules/custom 
		http://schema.qcadoo.org/modules/custom.xsd">

    <information>
        <name>MES - Technologies</name>
        <vendor>
            <name>Qcadoo Limited</name>
            <url>http://www.qcadoo.com/</url>
        </vendor>
        <description>A tree of operations which defines the manufacturing process.</description>
        <license>AGPL</license>
    </information>

    <dependencies>
        <dependency>
            <plugin>states</plugin>
            <version>[1.1.7</version>
        </dependency>
        <dependency>
            <plugin>productionLines</plugin>
            <version>[1.4.0</version>
        </dependency>
    </dependencies>

    <modules>
        <localization:translation path="locales"/>

        <model:model model="productComponent" resource="model/productComponent.xml"/>
        <model:model model="operation" resource="model/operation.xml"/>
        <model:model model="operationGroup" resource="model/operationGroup.xml"/>
        <model:model model="operationProductOutComponent"
                     resource="model/operationProductOutComponent.xml"/>
        <model:model model="operationProductInComponent" resource="model/operationProductInComponent.xml"/>
        <model:model model="operationProductInComponentDto" resource="model/operationProductInComponentDto.xml"/>

        <model:model model="technology" resource="model/technology.xml"/>
        <model:model model="technologyDto" resource="model/technologyDto.xml"/>
        <model:model model="technologyOperationComponent"
                     resource="model/technologyOperationComponent.xml"/>
        <model:model model="productStructureTreeNode" resource="model/productStructureTreeNode.xml"/>

        <model:model model="technologyStateChange" resource="model/technologyStateChange.xml"/>

        <model:model model="technologyGroup" resource="model/technologyGroup.xml"/>

        <model:model model="barcodeOperationComponent" resource="model/barcodeOperationComponent.xml"/>

        <model:model model="technologyOperationComponentMergeProductIn"
                     resource="model/technologyOperationComponentMergeProductIn.xml"/>

        <model:model model="technologyOperationComponentMergeProductOut"
                     resource="model/technologyOperationComponentMergeProductOut.xml"/>

        <model:model model="changeTechnologyParameters"
                     resource="model/changeTechnologyParameters.xml"/>

        <model:model model="modifyTechnologyHelper"
                     resource="model/modifyTechnologyHelper.xml"/>
        <model:model model="modifyTechnologyAddProductHelper"
                     resource="model/modifyTechnologyAddProductHelper.xml"/>

        <model:model model="operationSkill" resource="model/operationSkill.xml"/>

        <!--Ricefish-->
        <model:model model="operationStandard" resource="model/operationStandard.xml"/>

        <model:model-field plugin="technologies" model="operation">
            <model:hasMany name="standardItems" plugin="technologies"
                           model="operationStandard" joinField="operation" cascade="delete"/>
        </model:model-field>

        <model:model-field plugin="states" model="message">
            <model:belongsTo name="technologyStateChange" plugin="technologies" model="technologyStateChange"/>
        </model:model-field>

        <model:model-field plugin="basic" model="shift">
            <model:hasMany name="technologyStateChanges" plugin="technologies"
                           model="technologyStateChange" joinField="shift" cascade="nullify"/>
        </model:model-field>

        <model:model model="technologyAttachment" resource="model/technologyAttachment.xml"/>

        <model:model-field plugin="basic" model="product">
            <model:hasMany name="operationProductInComponents"
                           plugin="technologies" model="operationProductInComponent" joinField="product"
                           cascade="nullify"/>
        </model:model-field>

        <model:model-field plugin="basic" model="product">
            <model:hasMany name="operationProductInComponentsDto"
                           plugin="technologies" model="operationProductInComponentDto" joinField="product"
                           cascade="nullify"/>
        </model:model-field>


        <model:model-field plugin="basic" model="product">
            <model:hasMany name="operationProductOutComponents"
                           plugin="technologies" model="operationProductOutComponent"
                           joinField="product" cascade="nullify"/>
        </model:model-field>

        <model:model-field plugin="basic" model="product">
            <model:hasMany name="technologies" plugin="technologies"
                           model="technology" joinField="product" cascade="delete"/>
        </model:model-field>

        <model:model-field plugin="basic" model="product">
            <model:belongsTo name="technologyGroup" plugin="technologies" model="technologyGroup"
                             lazy="false"/>
        </model:model-field>

        <model:model-field plugin="basic" model="workstation">
            <model:manyToMany name="operations" plugin="technologies"
                              model="operation" joinField="workstations" copyable="true" cascade="nullify"/>
        </model:model-field>

        <model:model-field plugin="basic" model="workstation">
            <model:manyToMany name="operationComponents" plugin="technologies"
                              model="technologyOperationComponent" joinField="workstations" copyable="true"
                              cascade="nullify"/>
        </model:model-field>

        <model:model-hook plugin="basic" model="workstation">
            <model:onDelete
                    class="com.qcadoo.mes.technologies.hooks.WorkstationHooksT"
                    method="onDelete"/>
        </model:model-hook>

        <!--
            <model:model-field plugin="basic" model="workstationType">
                <model:manyToMany name="operations" plugin="technologies"
                    model="operation" joinField="workstationTypes" copyable="true" />
            </model:model-field>-->

        <model:model-field plugin="basic" model="workstationType">
            <model:hasMany name="operations" plugin="technologies"
                           model="operation" joinField="workstationType" cascade="nullify"/>
        </model:model-field>

        <model:model-field plugin="basic" model="division">
            <model:hasMany name="operations" plugin="technologies"
                           model="operation" joinField="division" cascade="nullify"/>
        </model:model-field>

        <model:model-field plugin="basic" model="division">
            <model:hasMany name="technologyOperationComponents" plugin="technologies"
                           model="technologyOperationComponent" joinField="division" cascade="nullify"/>
        </model:model-field>

        <model:model-field plugin="basic" model="skill">
            <model:hasMany name="operationSkills" plugin="technologies"
                           model="operationSkill" joinField="skill" cascade="delete" copyable="false"/>
        </model:model-field>
        <!--RicefishDev-->
        <model:model-field plugin="basic" model="standard">
            <model:hasMany name="operationStandards" plugin="technologies"
                           model="operationStandard" joinField="standard" cascade="delete" copyable="false"/>
        </model:model-field>

        <model:model-field plugin="productionLines" model="productionLine">
            <model:hasMany name="operations" plugin="technologies"
                           model="operation" joinField="productionLine" cascade="nullify"/>
        </model:model-field>

        <model:model-field plugin="productionLines" model="productionLine">
            <model:hasMany name="technologyOperationComponents" plugin="technologies"
                           model="technologyOperationComponent" joinField="productionLine" cascade="nullify"/>
        </model:model-field>

        <model:model-hook model="division" plugin="basic">
            <model:onDelete class="com.qcadoo.mes.technologies.hooks.DivisionHooksT" method="onDelete"/>
        </model:model-hook>

        <menu:menu-category name="technology" defaultAuthorizationRole="ROLE_TECHNOLOGIES"/>

        <menu:menu-item name="technologies" category="technology"
                        view="technologiesList" defaultAuthorizationRole="ROLE_TECHNOLOGIES"/>
        <menu:menu-item name="operations" category="technology"
                        view="operationsList" defaultAuthorizationRole="ROLE_TECHNOLOGIES"/>
        <menu:menu-item name="operationGroups" category="technology"
                        view="operationGroupsList" defaultAuthorizationRole="ROLE_TECHNOLOGIES"/>
        <menu:menu-item name="technologyGroups" category="technology"
                        view="technologyGroupsList" defaultAuthorizationRole="ROLE_TECHNOLOGIES"/>

        <view:view resource="view/operationsList.xml"/>
        <view:view resource="view/operationDetails.xml"/>
        <view:view resource="view/operationGroupsList.xml"/>
        <view:view resource="view/operationGroupDetails.xml"/>
        <view:view resource="view/technologiesList.xml"/>
        <view:view resource="view/technologyDetails.xml"/>
        <view:view resource="view/technologyOperationComponentDetails.xml"/>
        <view:view resource="view/technologyReferenceTechnologyComponentDetails.xml"/>
        <view:view resource="view/operationProductInComponentDetails.xml"/>
        <view:view resource="view/operationProductOutComponentDetails.xml"/>
        <view:view resource="view/technologiesWithUsingProductList.xml"/>

        <view:view resource="view/technologyGroupsList.xml"/>
        <view:view resource="view/technologyGroupDetails.xml"/>

        <view:view resource="view/multiUpload.xml"/>

        <view:view resource="view/changeTechnologyParameters.xml"/>
        <view:view resource="view/modifyTechnology.xml"/>

        <view:view resource="view/operationSkillDetails.xml"/>
        <view:view resource="view/skillOperationDetails.xml"/>
        <!--RicefishDev-->
        <view:view resource="view/operationStandardDetails.xml"/>
        <view:view resource="view/standardOperationDetails.xml"/>
        <view:view-tab resource="view/tabExtensions/standardDetails.xml"/>

        <view:view-ribbon-group resource="view/ribbonExtensions/productDetails.xml"/>

        <view:view-tab resource="view/tabExtensions/productDetails.xml"/>
        <view:view-tab resource="view/tabExtensions/skillDetails.xml"/>

        <view:resource uri="public/**/*"/>

        <view:view-listener plugin="basic" view="productDetails"
                            component="form" event="showTechnologiesWithTechnologyGroup"
                            class="com.qcadoo.mes.technologies.listeners.ProductDetailsListenersT"
                            method="showTechnologiesWithTechnologyGroup"/>

        <view:view-listener plugin="basic" view="productDetails"
                            component="form" event="showTechnologiesWithProduct"
                            class="com.qcadoo.mes.technologies.listeners.ProductDetailsListenersT"
                            method="showTechnologiesWithProduct"/>

        <view:view-listener plugin="basic" view="productDetails"
                            component="form" event="showTechnologiesWithUsingProduct"
                            class="com.qcadoo.mes.technologies.listeners.ProductDetailsListenersT"
                            method="showTechnologiesWithUsingProduct"/>

        <view:view-hook plugin="basic" view="productDetails"
                        type="beforeRender"
                        class="com.qcadoo.mes.technologies.hooks.ProductDetailsViewHooksT"
                        method="updateRibbonState"/>

        <custom:custom class="com.qcadoo.mes.technologies.states.module.TechnologyStateServiceRegisterModule"/>
    </modules>

    <features>
        <end-user/>
    </features>

</plugin>
